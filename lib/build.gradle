/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    id 'java-library'
    id 'checkstyle'
    id 'jacoco'
    id 'com.github.spotbugs' version '6.0.0-rc.2'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
	// Code quality check
	spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.12.0'
	spotbugs 'com.github.spotbugs:spotbugs:4.7.1'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sourceSets {
  // we define `main` sourceSet here, so SpotBugs Gradle Plugin generates `spotbugsMain` task
  main {
    java.srcDirs = ['src/main/java']
  }
}

// Checkstyle
checkstyle {
    toolVersion "10.3.3"
    configFile = rootProject.file('checkstyle/checkstyle.xml')
}

checkstyleMain {
	configFile = rootProject.file('checkstyle/checkstyle.xml')
}

checkstyleTest {
	// If we want, we can define differents rules for the tests
    configFile = rootProject.file('checkstyle/checkstyle.xml')
}

// Spotbugs
spotbugs {
    ignoreFailures = false
    //includeFilter = rootProject.file('spotbugs/include.xml')
    excludeFilter = rootProject.file('spotbugs/exclude.xml')
}

spotbugsMain {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

// Jacoco
jacoco {
    toolVersion = '0.8.7'
}

jacocoTestReport {
	dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('reports/jacoco')
    }
}


// JUnit
tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
